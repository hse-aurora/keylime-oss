IDevID and IAK
=================

.. warning::
    This page is still under development and not complete. It will be so until
    this warning is removed.


Introduction
------------

The IEEE 802.1AR Standard [#]_ defines a secure device identifier (DevID) as "a cryptographic identity that is bound to a device and used to assert the deviceâ€™s identity".  The initially installed identity is defined as an IDevID/IAK ("I" for initial) and is installed in the factory, where the server, switch, or other device is built, before shipping. The IDevID credential is intended to be usable for the life of the product. The IDevID/IAK is expected to be created at device manufacturing time.

The IEEE 802.1AR Standard can be used together with TPM-based keys and certificates as described in [#tcg]_. It applies the IEEE Standard 802.1AR device identity module definition and formatting to keys protected by a TPM 2.0. It addresses ways to incorporate TPM 2.0 created keys into solutions that protect device identities and helps prevent a "malicious endpoint". TPM is a secure Root of Trust for Storage (RTS) that provides protection for private keys, preventing use of keys from one device on another device or with another TPM. The security of the DevID keys provisioning is anchored in the Endorsement Key (EK) and its certificate (issued by the TPM manufacturer).

The IDevID and IAK keys are generated by the TPM at the OEM factory and certified by the OEM CA. The CA enforces the TCG-defined provisioning protocol which uses the EK similarly to how Keylime currently validates colocation of the EK and AK. The IDevID certificates include serial number information, so you can identify the specific device. This is used to bootstrap onboarding of devices for services, including attestation services. Using IDevID provides important security guarantees by ensuring that a device is genuine and one that is owned (via the serial number in the IDevID). In many cases the devices will be geographically distributed (in remote or branch offices, for example) so securely identifying the specific device is important.  

How to use 
---------- 

To allow IDevID and IAK registration, the registrar needs to have the manufacturer certificates used to provision the IDevID and IAK, and have a configuration option set to at least accept (the default) if not require IDevID and IAK registration. The agent needs to be configured to turn on IDevID and IAK regeneration, with the correct template selected, and also needs to know where it's IDevID and IAK certificates are.

Registrar
^^^^^^^^^

By default the Keylime registrar will accept an IDevID and IAK being used for registration. However, it still possible for an agent to register with just an EK instead. To disable this, and make the use of IDevID and IAK a requirement for registering devices, the configuration option ``tpm_identity`` needs to be changed:

    tpm_identity = iak_idevid

The certificates for the authority that signed the registering device's IAK and IDevID need to be added to the ``TPM_CERT_STORE``, the default location being ``/var/lib/keylime/tpm_cert_store``.

Agent
^^^^^

For the agent to use it's IDevID and IAK to register, the IAK and IDevID certificates need to be added to the ``keylime_dir`` and named ``iak-cert.crt`` and ``idevid-cert.crt`` respectively. Alternatively the ``iak_cert`` and ``idevid_cert`` configuration options can be set to absolute paths or filenames relative to the ``keylime_dir``.

Next, the functionality should be enabled by changing ``enable_iak_idevid`` to ``true``. Finally the template used by the certificates needs to be specified. If the wrong template is chosen the agent will fail to match the regenerated keys against the imported certificates and will fail.

The template should be set using the ``iak_idevid_template`` configuration option. As an alternative, the ``iak_idevid_asymmetric_alg`` and ``iak_idevid_name_alg`` options are available to manually set the algorithms, but this is not recommended, and **these options are ignored** if ``iak_idevid_template`` has been set.

Template definitions can be found in section 7.3.4 of [#tcg]_. If you don't know what template your IAK and IDevID use, the following table can be used to match your algorithms to a template:

==========  ===============  ==========
 Template    asymmetricAlg    nameAlg
==========  ===============  ==========
H-1         RSA 2048         SHA256
H-2         ECC NIST P256    SHA256
H-3         ECC NIST P384    SHA384
H-4         ECC NIST P521    SHA512
H-5         ECC SM2 P256     SM3_256
==========  ===============  ==========


.. [#] IEEE Standard for Local and Metropolitan Area Networks - Secure Device Identity, https://standards.ieee.org/standard/802_1AR-2018.html  
.. [#tcg] TPM 2.0 Keys for Device Identity and Attestation, https://trustedcomputinggroup.org/wp-content/uploads/TPM-2p0-Keys-for-Device-Identity-and-Attestation_v1_r12_pub10082021.pdf

